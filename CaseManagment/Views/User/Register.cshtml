@model Case.web.Models.UserViewModel
@*<link href="~/css/bootstrap-multiselect.css" rel="stylesheet" />*@
@*<div>
        <h2 style="text-align:center;">Registration</h2>
        <form id="UserForm" role="form">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="modal-body form-horizontal">
                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.FirstName, new { @class = "col-lg-8 control-label" })
                            <div class="col-lg-10">
                                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" }) <!--Display of Error Notification-->
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Email, new { @class = "col-lg-8 control-label" })
                            <div class="col-lg-10">
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" }) <!--Display of Error Notification-->
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Password, new { @class = "col-lg-8 control-label" })
                            <div class="col-lg-10">
                                @Html.TextBoxFor(m => m.Password, new { @class = "form-control", @type = "password" })
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" }) <!--Display of Error Notification-->
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-10">
                                <input type="submit" id="btnSubmit" value="Submit" class="btn btn-success" />
                            </div>

                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.LastName, new { @class = "col-lg-8 control-label" })
                            <div class="col-lg-10">
                                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })<!--Display of Error Notification-->
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.selectedRoles, new { @class = "col-lg-8 control-label" })
                            <div class="col-lg-10">
                                @Html.ListBoxFor(m => m.selectedRoles, Model.roles, new { @class = "listbox" })
                                @Html.ValidationMessageFor(m => m.selectedRoles, "", new { @class = "text-danger" })<!--Display of Error Notification-->
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-lg-8 control-label" })
                            <div class="col-lg-10">
                                @Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control", @type = "password" })
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" }) <!--Display of Error Notification-->
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </form>
    </div>*@

<style>
    body {
        color: #fff;
        background: #63738a;
        font-family: 'Roboto', sans-serif;
    }

    .form-control {
        height: 40px;
        box-shadow: none;
        color: #969fa4;
    }

        .form-control:focus {
            border-color: #5cb85c;
        }

    .form-control, .btn {
        border-radius: 3px;
    }

    .signup-form {
        width: 450px;
        margin: 0 auto;
        padding: 30px 0;
        font-size: 15px;
    }

        .signup-form h2 {
            color: #636363;
            margin: 0 0 15px;
            position: relative;
            text-align: center;
        }

            .signup-form h2:before, .signup-form h2:after {
                content: "";
                height: 2px;
                width: 30%;
                background: #d4d4d4;
                position: absolute;
                top: 50%;
                z-index: 2;
            }

            .signup-form h2:before {
                left: 0;
            }

            .signup-form h2:after {
                right: 0;
            }

        .signup-form .hint-text {
            color: #999;
            margin-bottom: 30px;
            text-align: center;
        }

        .signup-form form {
            color: #999;
            border-radius: 3px;
            margin-bottom: 15px;
            background: #f2f3f7;
            box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);
            padding: 30px;
        }

        .signup-form .form-group {
            margin-bottom: 20px;
        }

        .signup-form input[type="checkbox"] {
            margin-top: 3px;
        }

        .signup-form .btn {
            font-size: 16px;
            font-weight: bold;
            min-width: 140px;
            outline: none !important;
        }

        .signup-form .row div:first-child {
            padding-right: 10px;
        }

        .signup-form .row div:last-child {
            padding-left: 10px;
        }

        .signup-form a {
            color: #fff;
            text-decoration: underline;
        }

            .signup-form a:hover {
                text-decoration: none;
            }

        .signup-form form a {
            color: #5cb85c;
            text-decoration: none;
        }

            .signup-form form a:hover {
                text-decoration: underline;
            }

    .modal-body p {
        color: black;
    }
    .modal-dialog-scrollable .modal-body {
        overflow-y: auto;
        word-break: break-all;
    }
</style>
<div class="signup-form">
    <form asp-action="Register" asp-controller="User" role="form">
        <h2>Register</h2>
        <div asp-validation-summary="All" class="text-danger"></div>
        <div class="form-group">
            <div class="row">
                <div class="col">
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", placeholder = "First Name" })
                    @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                </div>
                <div class="col">
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @placeholder = "Last Name" })
                    @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.TextBoxFor(m => m.Password, new { @class = "form-control", @type = "password", @placeholder = "Password" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control", @type = "password", @placeholder = "Confirm Password" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", @type = "number", @placeholder = "Enter Phone " })
            @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
        </div>
        <div class="form-group" style="border: 1px solid #ced4da;padding:5px;">
            <label>Roles</label>
            <div class="row">

                @foreach (var item in Model.roles)
                {
                    <div class="col">
                        <label class="form-check-label"><input type="checkbox" name="selectedRoles" value="@item.Value"><span style="margin-left:5px;"> @item.Text </span></label>
                    </div>
                }
            </div>
        </div>
        <div class="form-group">
            @Html.TextAreaFor(m => m.Address, new { @class = "form-control", @placeholder = "Enter address" })
            @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
        </div>
        <div class="form-group" style="border: 1px solid #ced4da;padding:5px;">
            <label>Gender</label>
            <div class="row">
                <div class="col">
                    <label>Male</label>
                    @Html.RadioButtonFor(model => model.Gender, "Male", new { @checked = "checked" })

                </div>
                <div class="col">
                    <label>Female</label>
                    @Html.RadioButtonFor(model => model.Gender, "Female")
                </div>
                <div class="col">
                    <label>Others</label>
                    @Html.RadioButtonFor(model => model.Gender, "Others")
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.TextBoxFor(m => m.DateOfBirth, new { @class = "form-control", @type = "date" })
            @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label class="form-check-label">
                Read the <a href="javascript:void(0)" data-bs-toggle="modal" data-bs-target="#exampleModalScrollable">Terms of Use</a> &amp; <a href="javascript:void(0)" data-bs-toggle="modal" data-bs-target="#exampleModalScrollable">Privacy Policy</a>
            </label>
        </div>
        <div class="form-group">
            <button type="submit" id="btnSubmit" class="btn btn-success btn-lg btn-block">Register Now</button>
        </div>
    </form>
    <div class="text-center">Already have an account? <a asp-action="Login" asp-controller="User">Sign in</a></div>
</div>

<div class="modal fade" id="exampleModalScrollable" tabindex="-1" role="dialog"
     aria-labelledby="exampleModalScrollableTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalScrollableTitle">
                    Scrolling long
                    Content
                </h5>
                <button type="button" class="close" data-bs-dismiss="modal"
                        aria-label="Close">
                    <i data-feather="x"></i>
                </button>
            </div>
            <div class="modal-body">
                @(await Component.InvokeAsync("Terms"))
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light-secondary"
                        data-bs-dismiss="modal">
                    <i class="bx bx-x d-block d-sm-none"></i>
                    <span class="d-none d-sm-block">Close</span>
                </button>
                <button type="button" class="btn btn-primary ml-1" data-bs-dismiss="modal">
                    <i class="bx bx-check d-block d-sm-none"></i>
                    <span class="d-none d-sm-block">Accept</span>
                </button>
            </div>
        </div>
    </div>
</div>

@if (!string.IsNullOrEmpty(ViewBag.msg))
{
    @section Scripts{
        <script>
            Swal.fire({
                icon: 'success',
                title: 'Done',
                text: 'Account created succefully but not active contact to admin for account activation',
                confirmButtonText: 'Ok',
                allowOutsideClick: false,
            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    window.location.href = "/";
                }
            })
        </script>
    }
}
@*@section Scripts{
        <script src="~/js/bootstrap-multiselect.js"></script>
            <script>
                $(function () {
                    $('#selectedRoles').multiselect();
                });
            </script>
        <partial name="_ValidationScriptsPartial" />
        <script type="text/javascript">
            $("#UserForm").on("submit", function (event) {
                event.preventDefault();
                //var url = $(this).attr("action");
                var formData = $(this).serialize();
                if (!$(this).valid()) {
                    return false;
                }
                $('#btnSubmit').attr('disabled', 'disabled');
                $.ajax({
                    url: "/User/Register",
                    type: "POST",
                    data: formData,
                    dataType: "json",
                    success: function (response) {
                        if (response.ok) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Done',
                                text: response.message,
                                confirmButtonText: 'Ok',
                                allowOutsideClick: false,
                            }).then((result) => {
                                /* Read more about isConfirmed, isDenied below */
                                if (result.isConfirmed) {
                                    window.location.href = "/";
                                }
                            })
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: response.message,
                            })
                        }
                    },
                    error: function (response) {
                        //  alert('Error!');
                    },
                    complete: function () {
                        $('#btnSubmit').removeAttr('disabled');
                    }
                })
            });

        </script>
    }*@
